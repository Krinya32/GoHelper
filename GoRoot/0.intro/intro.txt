// 1. Немного общих слов

// Go из коробки - язык конкурентный, а не параллельный

// 1. Что такое конкурентность?
// Конкурентность - это подвид многопоточного исполнения програм, где различные задачи ("работники") конкурируют за ресурсы.
// Конкурентность навязывается различными факторами :
// * приоритеты исполнения
// * простой ресурсов
// * ручная передача

// 2. Пример конкуренции
// Екатерина убегает утром. Во время пробежки развязываются шнурки. Екатерина останавливается. Завязывает шнурки.
// Затем продолжает пробежку.
// Это классический пример конкурентности.

// 3. А параллелизм?
// Параллелизм - это подвид многопоточного исполнения программ, в котором множество задач ("работников") используют ресурсы ОДНОВРЕМЕННО

// 4. Пример параллелизма
// Екатерина бегает по утрам. Но в этот раз она еще и слушает музыку. В этот раз Екатерина ОДНОВРЕМЕННО и бегает и слушает музыку

// 5. В чем разница и что лучше?
// Рассмотрим простой пример - браузер.
// Когда мы заходим на какую-нибудь страницу: должно быть выполнено 2 действия
// * загрузка html страницы (файла)
// * отрисовка (рендеринг) в окне браузера

// Если данные задачи  выполняются конкурентно, то сначала вы загрузите необходимый объем файлов, а уже затем выполните отрисовку.
// Процессор в этой ситуации будет осуществлять переключение контекста (contex switch) в нужный момент (по завершению загрузки) и результат будет ожидаем

// С другой стороны если бы эти две задачи выполнялись параллельно, результат был бы немного шокирующим и непредсказуемым.

// 6. Как реализовать конкурентность в языке?
// В Go поддержка конкуретности реализована с использованием под-програм (со-программ) , так называемые "горутин" (или corutines/gorutines)

// 7. Горутина, это что?
// * Горутина -- это функция или метод, которая запускает другие функции/методы или выполняет какие то действия.
// * Горутина , с технической точки зрения, может восприниматься как легковесный тред. На одном системном потоке может одновременно находится огромное количество конкурирующих за ресурсы горутин.

// 8. Преимущество горутин над классическими тредами
// * горутина легковесная (размер горутины в миллионы раз меньше, чем размер классического треда в С++/Java)
// * использование большого количества горутин занимает меньшее количество потоков ОС (в отличие от С++/Java, где отдельный тред требует выделения отдельного потока в ОС)
// горутины могут общаться друг с другом используя каналы
